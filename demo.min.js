const _0x5cdc = ['readFile', 'all', 'hasOwnProperty', 'includes', 'utf-8', 'writeFile', 'parse', 'log', 'a\x20command\x20is\x20required\x20\x20\x0aSee\x20\x22node\x20file.js\x20-h\x22', '\x22\x20does\x20not\x20exist.\x20cannot\x20read', 'delete', 'key\x20\x22', 'read', '\x20\x20\x0aSee\x20\x22node\x20file.js\x20-h\x22', 'argv', 'a\x20key\x20is\x20required,\x20cannot\x20', '\x0aCOMMANDS:\x0a\x0a\x20\x20all\x0a\x20\x20\x20\x20print\x20all\x20entries\x20to\x20the\x20console\x0a\x0a\x20\x20read\x20<key>\x0a\x20\x20\x20\x20print\x20a\x20single\x20key/value\x20pair\x20to\x20the\x20console\x0a\x0a\x20\x20delete\x20<key>\x0a\x20\x20\x20\x20remove\x20the\x20entry\x20with\x20this\x20key\x0a\x0a\x20\x20write\x20<key>\x20<value>\x0a\x20\x20\x20\x20set\x20the\x20given\x20key/value\x20pair\x0a\x0aFLAGS:\x0a\x0a\x20\x20-h\x0a\x20\x20\x20\x20print\x20this\x20helpful\x20message\x0a', 'error', '\x22\x20does\x20not\x20exist.\x20cannot\x20delete', 'your\x20changes\x20were\x20saved', '/entries.json', 'no\x20value\x20provided.\x20\x20cannot\x20write\x20\x22', 'exit', 'length', '\x20is\x20not\x20a\x20valid\x20command\x20\x20\x0aSee\x20\x22node\x20file.js\x20-h\x22', 'write']; (function (_0x39ea06, _0x5cdc11) { const _0x591454 = function (_0x1c0816) { while (--_0x1c0816) { _0x39ea06['push'](_0x39ea06['shift']()); } }; _0x591454(++_0x5cdc11); }(_0x5cdc, 0x157)); const _0x5914 = function (_0x39ea06, _0x5cdc11) { _0x39ea06 = _0x39ea06 - 0x0; let _0x591454 = _0x5cdc[_0x39ea06]; return _0x591454; }; const _0x2c78ab = require('fs'); const _0x5f98d8 = __dirname + _0x5914('0xf'); const _0x4fed7a = _0x5914('0xb'); if (process[_0x5914('0x9')][_0x5914('0x12')] === 0x2 || process['argv'][_0x5914('0x18')]('-h')) { console['log'](_0x4fed7a); process[_0x5914('0x11')](0x0); } const _0x3227c3 = (_0x1907b7, _0x5bd627, _0x3f6db9, _0x5263db) => { if (_0x5bd627 === undefined) { console[_0x5914('0x2')](_0x5914('0x3')); process[_0x5914('0x11')](0x0); } if (_0x5914('0x16') !== _0x5bd627 && _0x5914('0x7') !== _0x5bd627 && _0x5914('0x5') !== _0x5bd627 && 'write' !== _0x5bd627) { console['log'](_0x5bd627 + _0x5914('0x13')); process[_0x5914('0x11')](0x0); } if (_0x5bd627 === _0x5914('0x16')) { console[_0x5914('0x2')](_0x1907b7); process['exit'](0x0); } if (_0x3f6db9 === undefined) { console[_0x5914('0x2')](_0x5914('0xa') + _0x5bd627 + _0x5914('0x8')); process[_0x5914('0x11')](0x0); } if (_0x5914('0x7') === _0x5bd627) { if (!_0x1907b7[_0x5914('0x17')](_0x3f6db9)) { console[_0x5914('0x2')](_0x5914('0x6') + _0x3f6db9 + _0x5914('0x4')); process[_0x5914('0x11')](0x0); } console[_0x5914('0x2')](_0x3f6db9 + ':\x20' + _0x1907b7[_0x3f6db9]); process[_0x5914('0x11')](0x0); } else if ('delete' === _0x5bd627) { if (!_0x1907b7[_0x5914('0x17')](_0x3f6db9)) { console[_0x5914('0x2')](_0x5914('0x6') + _0x3f6db9 + _0x5914('0xd')); process[_0x5914('0x11')](0x0); } delete _0x1907b7[_0x3f6db9]; } else if (_0x5914('0x14') === _0x5bd627) { if (_0x5263db === undefined) { console[_0x5914('0x2')](_0x5914('0x10') + _0x3f6db9 + '\x22'); process[_0x5914('0x11')](0x0); } _0x1907b7[_0x3f6db9] = _0x5263db; } const _0x1a406a = JSON['stringify'](_0x1907b7, null, '\x20\x20'); const _0x316ec9 = _0x5147ed => { if (_0x5147ed) { console[_0x5914('0x2')](_0x5147ed); } else { console[_0x5914('0x2')](_0x5914('0xe')); console[_0x5914('0x2')]('(' + _0x5bd627 + ')\x20' + _0x3f6db9); }; }; _0x2c78ab[_0x5914('0x0')](_0x5f98d8, _0x1a406a, _0x316ec9); }; const _0x3a4ed7 = (_0x2ae86e, _0x4084b7) => { if (_0x2ae86e) { console[_0x5914('0xc')](_0x2ae86e); } else { const _0xe9c3da = JSON[_0x5914('0x1')](_0x4084b7); _0x3227c3(_0xe9c3da, process[_0x5914('0x9')][0x2], process[_0x5914('0x9')][0x3], process['argv'][0x4]); }; }; _0x2c78ab[_0x5914('0x15')](_0x5f98d8, _0x5914('0x19'), _0x3a4ed7);
